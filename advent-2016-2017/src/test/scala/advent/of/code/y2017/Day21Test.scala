package advent.of.code.y2017

import org.scalatest.FunSuite

class Day21Test extends FunSuite {

  test("fractal art") {

    val rules = Day21.parse(input.split("\n"))
    println(Day21.apply(rules, 18))
  }

  val test = "../.# => ##./#../...\n.#./..#/### => #..#/..../..../#..#"

  val input = "../.. => .../#.#/...\n#./.. => ..#/..#/#..\n##/.. => .../#../..#\n.#/#. => #../.../...\n##/#. => #.#/.#./#..\n##/## => ..#/#.#/..#\n.../.../... => .#../#..#/#.../.#..\n#../.../... => ..##/..##/.#.#/....\n.#./.../... => ..##/..##/.###/##..\n##./.../... => ..../.##./#.##/..#.\n#.#/.../... => ####/#.##/#.##/#.#.\n###/.../... => #..#/..#./..../##.#\n.#./#../... => ..#./.#../...#/#.##\n##./#../... => ..../#.##/#..#/.#..\n..#/#../... => ##.#/####/###./###.\n#.#/#../... => ..../#.##/.###/#.#.\n.##/#../... => ..#./##.#/####/..##\n###/#../... => ..#./.##./...#/..#.\n.../.#./... => .###/#.../.#../####\n#../.#./... => ###./.#.#/#.##/##.#\n.#./.#./... => ..##/..#./###./..#.\n##./.#./... => #..#/..#./###./...#\n#.#/.#./... => #.../##.#/#.##/#..#\n###/.#./... => ...#/#..#/####/##.#\n.#./##./... => #.##/#.##/..../#.#.\n##./##./... => ..##/###./..#./####\n..#/##./... => ..../##../##.#/.##.\n#.#/##./... => ##../####/####/.#.#\n.##/##./... => ..../##.#/.###/##..\n###/##./... => .#../#.#./.#../..##\n.../#.#/... => ####/#.#./..##/#..#\n#../#.#/... => .#../.#../#..#/....\n.#./#.#/... => ..##/.##./####/#.#.\n##./#.#/... => ..#./###./.#../....\n#.#/#.#/... => ..#./..#./...#/#...\n###/#.#/... => ###./.#../##../####\n.../###/... => #.##/####/####/..##\n#../###/... => .#.#/...#/###./...#\n.#./###/... => ..../.#.#/.#../....\n##./###/... => ...#/.###/..../.##.\n#.#/###/... => ..##/###./.#../#..#\n###/###/... => .###/..#./..#./.###\n..#/.../#.. => .##./###./####/#.#.\n#.#/.../#.. => ####/#.../#.../..##\n.##/.../#.. => ###./#..#/..#./.#..\n###/.../#.. => .###/.##./#.#./.###\n.##/#../#.. => ##.#/...#/.#.#/...#\n###/#../#.. => #.##/..#./..../#..#\n..#/.#./#.. => #..#/##.#/.##./####\n#.#/.#./#.. => ###./..##/#..#/#..#\n.##/.#./#.. => .#../..../...#/...#\n###/.#./#.. => .#../##../.###/..#.\n.##/##./#.. => ##../..##/##../##.#\n###/##./#.. => #.##/#..#/.###/####\n#../..#/#.. => ##.#/####/#.../..##\n.#./..#/#.. => #..#/..../..../###.\n##./..#/#.. => #..#/##.#/##.#/#.#.\n#.#/..#/#.. => .###/##.#/####/#...\n.##/..#/#.. => ####/.##./...#/#..#\n###/..#/#.. => .#.#/####/##.#/...#\n#../#.#/#.. => ..##/.##./..##/##..\n.#./#.#/#.. => #.../##../..##/..#.\n##./#.#/#.. => ...#/##.#/#..#/.#..\n..#/#.#/#.. => #.#./##../#.##/###.\n#.#/#.#/#.. => ##../##.#/#.#./....\n.##/#.#/#.. => ####/...#/####/.#..\n###/#.#/#.. => ..../.#../.#../....\n#../.##/#.. => .#.#/..#./#..#/.###\n.#./.##/#.. => #.../.#.#/.###/.##.\n##./.##/#.. => #.#./#.#./.#../###.\n#.#/.##/#.. => ####/##../.##./####\n.##/.##/#.. => #.../#.#./#.##/###.\n###/.##/#.. => ####/####/..../####\n#../###/#.. => ####/.##./...#/##.#\n.#./###/#.. => .#../#.##/#..#/..##\n##./###/#.. => #.#./..##/#.../..##\n..#/###/#.. => #.##/.###/#.#./###.\n#.#/###/#.. => #.##/#.##/..../#..#\n.##/###/#.. => .##./#.#./..##/####\n###/###/#.. => .##./#..#/#.../###.\n.#./#.#/.#. => #.#./#..#/#..#/##.#\n##./#.#/.#. => ...#/#.#./##.#/###.\n#.#/#.#/.#. => ##.#/..##/##.#/#.##\n###/#.#/.#. => .#.#/..#./##../.##.\n.#./###/.#. => #..#/..#./..##/#...\n##./###/.#. => ####/.#.#/####/..#.\n#.#/###/.#. => #.#./..##/##../#..#\n###/###/.#. => ...#/..../..../#.#.\n#.#/..#/##. => ..#./.##./###./.#.#\n###/..#/##. => #.../###./...#/####\n.##/#.#/##. => ..../..../.###/##..\n###/#.#/##. => ##../..../#.#./.##.\n#.#/.##/##. => .#.#/##../..##/#.#.\n###/.##/##. => ###./####/...#/.#..\n.##/###/##. => ..##/#.../..##/.#.#\n###/###/##. => ..##/...#/.###/.#..\n#.#/.../#.# => ..##/#.../##.#/....\n###/.../#.# => #.##/#..#/..../##..\n###/#../#.# => #.../..../##.#/..#.\n#.#/.#./#.# => ###./..##/.#../.##.\n###/.#./#.# => ..../#..#/.###/#..#\n###/##./#.# => .#.#/###./##.#/.###\n#.#/#.#/#.# => ..../..../.##./#..#\n###/#.#/#.# => .###/.#.#/...#/.###\n#.#/###/#.# => .#.#/##../.#../.#..\n###/###/#.# => .#.#/.##./#.##/....\n###/#.#/### => ..#./..#./..#./..##\n###/###/### => ##.#/..##/.#.#/...."
//
//  test("see") {
//    println(Day21.initial)
//    println()
//    println(Day21.initial.flipX())
//    println()
//    println(Day21.initial.flipY())
//    println()
//    println(Day21.initial.flipY().flipX())
//    println()
//    println(Day21.initial.rotate90())
//    println()
//    println(Day21.initial.rotate90().rotate90())
//    println()
//    println(Day21.initial.rotate90().rotate90().rotate90())
//  }
}
